version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"  # Expose NGINX on port 80 of the host
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Mount the NGINX configuration file
    depends_on:
      - web-app
      - web-api
    networks:
      - dm_network  # Changed network name

  web-app:
    build:
      context: .  # Path to your WebUI service
      dockerfile: WebUI/Dockerfile  # Ensure this is named correctly
    ports:
      - "3000:3000"  # Expose WebUI on port 3000 of the host
    depends_on:
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: Production 
    networks:
      - dm_network  # Changed network name

  web-api:
    build:
      context: .  # Path to your API service
      dockerfile: DMSystem/Dockerfile  # Ensure this is named correctly
    ports:
      - "5000:5000"  # Expose API on port 5000 of the host
    depends_on:
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: Production 
    networks:
      - dm_network  # Changed network name

  postgres:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-groupb} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testtest}  
      POSTGRES_DB: dm_system
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - dm_network  # Changed network name
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:6.18
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}  
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}  
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - dm_network  # Changed network name
    restart: unless-stopped

networks:
  dm_network:  # Changed network name
    driver: bridge

volumes:
  postgres:
  pgadmin:
